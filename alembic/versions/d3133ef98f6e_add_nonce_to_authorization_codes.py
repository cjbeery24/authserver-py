"""add_nonce_to_authorization_codes

Revision ID: d3133ef98f6e
Revises: 0efb8aad1742
Create Date: 2025-09-29 07:51:26.678243

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd3133ef98f6e'
down_revision: Union[str, Sequence[str], None] = '0efb8aad1742'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_audit_logs_user_id'), 'audit_logs', type_='foreignkey')
    op.create_foreign_key(None, 'audit_logs', 'users', ['user_id'], ['id'])
    op.add_column('oauth2_authorization_codes', sa.Column('nonce', sa.String(length=255), nullable=True))
    op.alter_column('oauth2_authorization_codes', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('oauth2_authorization_codes', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.create_index(op.f('ix_oauth2_authorization_codes_client_id'), 'oauth2_authorization_codes', ['client_id'], unique=False)
    op.create_index(op.f('ix_oauth2_authorization_codes_code'), 'oauth2_authorization_codes', ['code'], unique=True)
    op.create_index(op.f('ix_oauth2_authorization_codes_expires_at'), 'oauth2_authorization_codes', ['expires_at'], unique=False)
    op.create_index(op.f('ix_oauth2_authorization_codes_id'), 'oauth2_authorization_codes', ['id'], unique=False)
    op.create_index(op.f('ix_oauth2_authorization_codes_user_id'), 'oauth2_authorization_codes', ['user_id'], unique=False)
    op.alter_column('oauth2_client_tokens', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('oauth2_client_tokens', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=False)
    op.drop_index(op.f('idx_oauth2_client_token_token'), table_name='oauth2_client_tokens')
    op.create_index(op.f('ix_oauth2_client_tokens_client_id'), 'oauth2_client_tokens', ['client_id'], unique=False)
    op.create_index(op.f('ix_oauth2_client_tokens_id'), 'oauth2_client_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_oauth2_client_tokens_token'), 'oauth2_client_tokens', ['token'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_oauth2_client_tokens_token'), table_name='oauth2_client_tokens')
    op.drop_index(op.f('ix_oauth2_client_tokens_id'), table_name='oauth2_client_tokens')
    op.drop_index(op.f('ix_oauth2_client_tokens_client_id'), table_name='oauth2_client_tokens')
    op.create_index(op.f('idx_oauth2_client_token_token'), 'oauth2_client_tokens', ['token'], unique=True)
    op.alter_column('oauth2_client_tokens', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('oauth2_client_tokens', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_index(op.f('ix_oauth2_authorization_codes_user_id'), table_name='oauth2_authorization_codes')
    op.drop_index(op.f('ix_oauth2_authorization_codes_id'), table_name='oauth2_authorization_codes')
    op.drop_index(op.f('ix_oauth2_authorization_codes_expires_at'), table_name='oauth2_authorization_codes')
    op.drop_index(op.f('ix_oauth2_authorization_codes_code'), table_name='oauth2_authorization_codes')
    op.drop_index(op.f('ix_oauth2_authorization_codes_client_id'), table_name='oauth2_authorization_codes')
    op.alter_column('oauth2_authorization_codes', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('oauth2_authorization_codes', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.drop_column('oauth2_authorization_codes', 'nonce')
    op.drop_constraint(None, 'audit_logs', type_='foreignkey')
    op.create_foreign_key(op.f('fk_audit_logs_user_id'), 'audit_logs', 'users', ['user_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###
