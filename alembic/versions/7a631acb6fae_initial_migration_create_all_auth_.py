"""Initial migration: create all auth system tables with indexes and constraints

Revision ID: 7a631acb6fae
Revises: 3686ea96436b
Create Date: 2025-09-17 13:40:24.691011

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7a631acb6fae'
down_revision: Union[str, Sequence[str], None] = '3686ea96436b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource', sa.String(length=255), nullable=True),
    sa.Column('resource_id', sa.String(length=255), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_log_action_created', 'audit_logs', ['action', 'created_at'], unique=False)
    op.create_index('idx_audit_log_created_at', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_log_resource_created', 'audit_logs', ['resource', 'created_at'], unique=False)
    op.create_index('idx_audit_log_user_created', 'audit_logs', ['user_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource'), 'audit_logs', ['resource'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('oauth2_clients',
    sa.Column('client_id', sa.String(length=255), nullable=False),
    sa.Column('client_secret', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('redirect_uris', sa.Text(), nullable=False),
    sa.Column('scopes', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_oauth2_clients_client_id'), 'oauth2_clients', ['client_id'], unique=True)
    op.create_index(op.f('ix_oauth2_clients_id'), 'oauth2_clients', ['id'], unique=False)
    op.create_table('permissions',
    sa.Column('resource', sa.String(length=100), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('resource', 'action', name='unique_resource_action')
    )
    op.create_index(op.f('ix_permissions_id'), 'permissions', ['id'], unique=False)
    op.create_index(op.f('ix_permissions_resource'), 'permissions', ['resource'], unique=False)
    op.create_table('roles',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('mfa_secrets',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('secret', sa.String(length=32), nullable=False),
    sa.Column('backup_codes', sa.Text(), nullable=False, server_default='{}'),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('backup_codes_expiry', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_mfa_secrets_id'), 'mfa_secrets', ['id'], unique=False)
    op.create_index(op.f('ix_mfa_secrets_user_id'), 'mfa_secrets', ['user_id'], unique=True)
    op.create_table('oauth2_tokens',
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('token_type', sa.String(length=50), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('scope', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['oauth2_clients.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_oauth2_token_client_type', 'oauth2_tokens', ['client_id', 'token_type'], unique=False)
    op.create_index('idx_oauth2_token_created', 'oauth2_tokens', ['created_at'], unique=False)
    op.create_index(op.f('ix_oauth2_tokens_access_token'), 'oauth2_tokens', ['access_token'], unique=False)
    op.create_index(op.f('ix_oauth2_tokens_client_id'), 'oauth2_tokens', ['client_id'], unique=False)
    op.create_index(op.f('ix_oauth2_tokens_expires_at'), 'oauth2_tokens', ['expires_at'], unique=False)
    op.create_index(op.f('ix_oauth2_tokens_id'), 'oauth2_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_oauth2_tokens_refresh_token'), 'oauth2_tokens', ['refresh_token'], unique=False)
    op.create_index(op.f('ix_oauth2_tokens_user_id'), 'oauth2_tokens', ['user_id'], unique=False)
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_id', 'permission_id', name='unique_role_permission')
    )
    op.create_index('idx_role_permission_perm_role', 'role_permissions', ['permission_id', 'role_id'], unique=False)
    op.create_index(op.f('ix_role_permissions_id'), 'role_permissions', ['id'], unique=False)
    op.create_index(op.f('ix_role_permissions_permission_id'), 'role_permissions', ['permission_id'], unique=False)
    op.create_index(op.f('ix_role_permissions_role_id'), 'role_permissions', ['role_id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'role_id', name='unique_user_role')
    )
    op.create_index('idx_user_role_role_user', 'user_roles', ['role_id', 'user_id'], unique=False)
    op.create_index(op.f('ix_user_roles_id'), 'user_roles', ['id'], unique=False)
    op.create_index(op.f('ix_user_roles_role_id'), 'user_roles', ['role_id'], unique=False)
    op.create_index(op.f('ix_user_roles_user_id'), 'user_roles', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_roles_user_id'), table_name='user_roles')
    op.drop_index(op.f('ix_user_roles_role_id'), table_name='user_roles')
    op.drop_index(op.f('ix_user_roles_id'), table_name='user_roles')
    op.drop_index('idx_user_role_role_user', table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_role_permissions_role_id'), table_name='role_permissions')
    op.drop_index(op.f('ix_role_permissions_permission_id'), table_name='role_permissions')
    op.drop_index(op.f('ix_role_permissions_id'), table_name='role_permissions')
    op.drop_index('idx_role_permission_perm_role', table_name='role_permissions')
    op.drop_table('role_permissions')
    op.drop_index(op.f('ix_oauth2_tokens_user_id'), table_name='oauth2_tokens')
    op.drop_index(op.f('ix_oauth2_tokens_refresh_token'), table_name='oauth2_tokens')
    op.drop_index(op.f('ix_oauth2_tokens_id'), table_name='oauth2_tokens')
    op.drop_index(op.f('ix_oauth2_tokens_expires_at'), table_name='oauth2_tokens')
    op.drop_index(op.f('ix_oauth2_tokens_client_id'), table_name='oauth2_tokens')
    op.drop_index(op.f('ix_oauth2_tokens_access_token'), table_name='oauth2_tokens')
    op.drop_index('idx_oauth2_token_created', table_name='oauth2_tokens')
    op.drop_index('idx_oauth2_token_client_type', table_name='oauth2_tokens')
    op.drop_table('oauth2_tokens')
    op.drop_index(op.f('ix_mfa_secrets_user_id'), table_name='mfa_secrets')
    op.drop_index(op.f('ix_mfa_secrets_id'), table_name='mfa_secrets')
    op.drop_table('mfa_secrets')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_permissions_resource'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_id'), table_name='permissions')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_oauth2_clients_id'), table_name='oauth2_clients')
    op.drop_index(op.f('ix_oauth2_clients_client_id'), table_name='oauth2_clients')
    op.drop_table('oauth2_clients')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_audit_log_user_created', table_name='audit_logs')
    op.drop_index('idx_audit_log_resource_created', table_name='audit_logs')
    op.drop_index('idx_audit_log_created_at', table_name='audit_logs')
    op.drop_index('idx_audit_log_action_created', table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
