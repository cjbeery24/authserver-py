"""Add user_token table for token tracking and invalidation

Revision ID: b8db72cfb6d4
Revises: fc8f4db70ead
Create Date: 2025-09-18 09:46:41.521400

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b8db72cfb6d4'
down_revision: Union[str, Sequence[str], None] = 'fc8f4db70ead'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_tokens',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token_jti', sa.String(length=255), nullable=False),
    sa.Column('token_type', sa.String(length=50), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_reason', sa.String(length=255), nullable=True),
    sa.Column('issued_ip', sa.String(length=45), nullable=True),
    sa.Column('issued_user_agent', sa.Text(), nullable=True),
    sa.Column('revoked_ip', sa.String(length=45), nullable=True),
    sa.Column('revoked_user_agent', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_tokens_expires_at', 'user_tokens', ['expires_at'], unique=False)
    op.create_index('idx_user_tokens_token_type', 'user_tokens', ['token_type'], unique=False)
    op.create_index('idx_user_tokens_user_created', 'user_tokens', ['user_id', 'created_at'], unique=False)
    op.create_index('idx_user_tokens_user_id', 'user_tokens', ['user_id'], unique=False)
    op.create_index('idx_user_tokens_user_type', 'user_tokens', ['user_id', 'token_type'], unique=False)
    op.create_index(op.f('ix_user_tokens_expires_at'), 'user_tokens', ['expires_at'], unique=False)
    op.create_index(op.f('ix_user_tokens_id'), 'user_tokens', ['id'], unique=False)
    op.create_index(op.f('ix_user_tokens_is_revoked'), 'user_tokens', ['is_revoked'], unique=False)
    op.create_index(op.f('ix_user_tokens_token_jti'), 'user_tokens', ['token_jti'], unique=True)
    op.create_index(op.f('ix_user_tokens_token_type'), 'user_tokens', ['token_type'], unique=False)
    op.create_index(op.f('ix_user_tokens_user_id'), 'user_tokens', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_tokens_user_id'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_token_type'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_token_jti'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_is_revoked'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_id'), table_name='user_tokens')
    op.drop_index(op.f('ix_user_tokens_expires_at'), table_name='user_tokens')
    op.drop_index('idx_user_tokens_user_type', table_name='user_tokens')
    op.drop_index('idx_user_tokens_user_id', table_name='user_tokens')
    op.drop_index('idx_user_tokens_user_created', table_name='user_tokens')
    op.drop_index('idx_user_tokens_token_type', table_name='user_tokens')
    op.drop_index('idx_user_tokens_expires_at', table_name='user_tokens')
    op.drop_table('user_tokens')
    # ### end Alembic commands ###
